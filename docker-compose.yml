version: "2"
services:
  traefik:
    restart: unless-stopped
    container_name: traefik
    image: traefik:v2.0.2
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/etc/ssl/traefik
    networks:
      - web

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_USER_PASSWORD=${MONGODB_USER_PASSWORD}
    volumes:
      - ./back/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./back/.env:/docker-entrypoint-initdb.d/.env:ro
    networks:
      - web

  backend:
    image: node:21
    working_dir: /back/src/
    command: sh -c "npm install && npm start"
    volumes:
      - ./back:/back/src
    networks:
      - web

  front:
    depends_on:
      - traefik
    image: node:21
    working_dir: /app/src
    command: sh -c 'npm install && npm run build && npm start'
    volumes:
      - ./front:/app/src
    labels:
      - "traefik.http.routers.front.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.front.tls=true"
      - "traefik.http.services.front.loadbalancer.server.port=3000"
    networks:
      - web

  reverse-proxy-https-helper:
    image: alpine
    command: sh -c "cd /etc/ssl/traefik
      && wget traefik.me/cert.pem -O cert.pem
      && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik
    networks:
      - web

networks:
  web:

volumes:
  certs:
