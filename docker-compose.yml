version: "2"
services:
  traefik:
    image: traefik
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.storage=/acme.json"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./acme.json:/acme.json
    networks:
      - web

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_USER_PASSWORD=${MONGODB_USER_PASSWORD}
    volumes:
      - ./back/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./back/.env:/docker-entrypoint-initdb.d/.env:ro
    networks:
      - web

  backend:
    image: node:21
    working_dir: /back/src/
    command: sh -c "npm install && npm start"
    volumes:
      - ./back:/back/src
    networks:
      - web

  front:
    depends_on:
      - traefik
    image: node:21
    working_dir: /app/src
    command: sh -c 'npm install && npm run build && npm start'
    volumes:
      - ./front:/app/src
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`${{ SITE}}`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.services.front.loadbalancer.server.port=3000"
    networks:
      - web

networks:
  web:
